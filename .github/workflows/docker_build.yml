name: Build Test App Docker Image

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Build and Release Test App"]
    types:
      - completed

env:
  CONTAINER_TAG: 5.0

jobs:
  docker-build-development:
    permissions: write-all
    runs-on: [ubuntu-latest]
    env:
      CONFIG: "Development"
    environment: main
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: "Checkout GitHub Action - TestApp"
        uses: actions/checkout@v3
        with:
          clean: "false"
      - name: Read the project version
        id: getversion
        run: |
          echo "version=$(awk -F '=' '/ProjectVersion/ {print $2}' Config/DefaultGame.ini)" >> $GITHUB_OUTPUT
      - name: Download ${{ env.CONFIG }} Release
        id: download
        uses: robinraju/release-downloader@v1.8
        with:
          tag: "${{ steps.getversion.outputs.version }}-${{ github.ref_name }}-${{ github.event.repository.name }}-${{ env.CONFIG }}"
          filename: "${{ steps.getversion.outputs.version }}-${{ github.ref_name }}-${{ github.event.repository.name }}-${{ env.CONFIG }}-Linux.tar.gz"
          latest: false
          tarBall: true
          zipBall: false
      - run: |
          rm -rf release
          mkdir release
      - name: Extract files
        uses: a7ul/tar-action@v1.1.0
        id: extract
        with:
          command: x
          cwd: ./release
          files: ${{ fromJson(steps.download.outputs.downloaded_files)[0] }}
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          build-args: sourcedir=release/Linux
          push: true
          tags: |
            mcottontensor/pstesting:${{ env.CONTAINER_TAG }}-${{ env.CONFIG }}

  docker-build-shipping:
    permissions: write-all
    runs-on: [ubuntu-latest]
    env:
      CONFIG: "Shipping"
    environment: main
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: "Checkout GitHub Action - TestApp"
        uses: actions/checkout@v3
        with:
          clean: "false"
      - name: Read the project version
        id: getversion
        run: |
          echo "version=$(awk -F '=' '/ProjectVersion/ {print $2}' Config/DefaultGame.ini)" >> $GITHUB_OUTPUT
      - name: Download ${{ env.CONFIG }} Release
        id: download
        uses: robinraju/release-downloader@v1.8
        with:
          tag: "${{ steps.getversion.outputs.version }}-${{ github.ref_name }}-${{ github.event.repository.name }}-${{ env.CONFIG }}"
          filename: "${{ steps.getversion.outputs.version }}-${{ github.ref_name }}-${{ github.event.repository.name }}-${{ env.CONFIG }}-Linux.tar.gz"
          latest: false
          tarBall: true
          zipBall: false
      - run: |
          rm -rf release
          mkdir release
      - name: Extract files
        uses: a7ul/tar-action@v1.1.0
        id: extract
        with:
          command: x
          cwd: ./release
          files: ${{ fromJson(steps.download.outputs.downloaded_files)[0] }}
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          build-args: sourcedir=release/Linux
          push: true
          tags: |
            mcottontensor/pstesting:${{ env.CONTAINER_TAG }}-${{ env.CONFIG }}
            mcottontensor/pstesting:latest
