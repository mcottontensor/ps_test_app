name: Build Project in Docker

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  PROJECT_FILE: "PSTestStreamer.uproject"
  ENGINE_VERSION: "5.0"

jobs:
  package-development:
    permissions: write-all
    runs-on: [self-hosted, aws, Linux]
    environment: main
    env:
      CONFIG: "Development"
    steps:
      - name: "Checkout GitHub Action - TestApp"
        uses: actions/checkout@v3
        with:
          clean: "false"
      - name: Read the project version
        id: getversion
        run: |
          echo "version=$(awk -F '=' '/ProjectVersion/ {print $2}' Config/DefaultGame.ini)" >> $GITHUB_OUTPUT
      - uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.GH_API_KEY }}
          registry: ghcr.io
          image: ghcr.io/epicgames/unreal-engine:dev-slim-${{ env.ENGINE_VERSION }}
          options: -v ${{ github.workspace }}:/project
          run: >
            /home/ue4/UnrealEngine/Engine/Build/BatchFiles/RunUAT.sh
            BuildCookRun
            -utf8output
            -platform=Linux
            -clientconfig=${{ env.CONFIG }}
            -serverconfig=${{ env.CONFIG }}
            -project="/project/${{ env.PROJECT_FILE }}"
            -noP4 -nodebuginfo -allmaps
            -cook -build -stage -prereqs -pak -archive
            -archivedirectory="/project/packaged/${{ env.CONFIG }}"
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          build-args: sourcedir=packaged/${{ env.CONFIG }}/Linux
          push: true
          tags: |
            mcottontensor/pstesting:${{ env.ENGINE_VERSION }}-${{ env.CONFIG }}
      - name: Archive ${{ env.CONFIG }} build
        uses: a7ul/tar-action@v1.1.0
        with:
          command: c
          cwd: '${{ github.workspace }}/packaged/${{ env.CONFIG }}'
          files: |
            Linux
          outPath: '${{ github.workspace }}/${{ env.ENGINE_VERSION }}-${{ steps.getversion.outputs.version }}-${{ github.ref_name }}-${{ github.event.repository.name }}-${{ env.CONFIG }}-Linux.tar.gz'
      - name: "Make the release"
        uses: ncipollo/release-action@v1
        with:
          tag: "${{ env.ENGINE_VERSION }}-${{ steps.getversion.outputs.version }}-${{ github.ref_name }}-${{ github.event.repository.name }}-${{ env.CONFIG }}"
          artifacts: "${{ github.workspace }}/${{ env.ENGINE_VERSION }}-${{ steps.getversion.outputs.version }}-${{ github.ref_name }}-${{ github.event.repository.name }}-${{ env.CONFIG }}-Linux.tar.gz"
          generateReleaseNotes: true
          allowUpdates: true
  package-shipping:
    permissions: write-all
    runs-on: [self-hosted, aws, Linux]
    environment: main
    env:
      CONFIG: "Shipping"
    steps:
      - name: "Checkout GitHub Action - TestApp"
        uses: actions/checkout@v3
        with:
          clean: "false"
      - name: Read the project version
        id: getversion
        run: |
          echo "version=$(awk -F '=' '/ProjectVersion/ {print $2}' Config/DefaultGame.ini)" >> $GITHUB_OUTPUT
      - uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.GH_API_KEY }}
          registry: ghcr.io
          image: ghcr.io/epicgames/unreal-engine:dev-slim-${{ env.ENGINE_VERSION }}
          options: -v ${{ github.workspace }}:/project
          run: >
            /home/ue4/UnrealEngine/Engine/Build/BatchFiles/RunUAT.sh
            BuildCookRun
            -utf8output
            -platform=Linux
            -clientconfig=${{ env.CONFIG }}
            -serverconfig=${{ env.CONFIG }}
            -project="/project/${{ env.PROJECT_FILE }}"
            -noP4 -nodebuginfo -allmaps
            -cook -build -stage -prereqs -pak -archive
            -archivedirectory="/project/packaged/${{ env.CONFIG }}"
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          build-args: sourcedir=packaged/${{ env.CONFIG }}/Linux
          push: true
          tags: |
            mcottontensor/pstesting:${{ env.ENGINE_VERSION }}-${{ env.CONFIG }}
      - name: Archive ${{ env.CONFIG }} build
        uses: a7ul/tar-action@v1.1.0
        with:
          command: c
          cwd: '${{ github.workspace }}/packaged/${{ env.CONFIG }}'
          files: |
            Linux
          outPath: '${{ github.workspace }}/${{ env.ENGINE_VERSION }}-${{ steps.getversion.outputs.version }}-${{ github.ref_name }}-${{ github.event.repository.name }}-${{ env.CONFIG }}-Linux.tar.gz'
      - name: "Make the release"
        uses: ncipollo/release-action@v1
        with:
          tag: "${{ env.ENGINE_VERSION }}-${{ steps.getversion.outputs.version }}-${{ github.ref_name }}-${{ github.event.repository.name }}-${{ env.CONFIG }}"
          artifacts: "${{ github.workspace }}/${{ env.ENGINE_VERSION }}-${{ steps.getversion.outputs.version }}-${{ github.ref_name }}-${{ github.event.repository.name }}-${{ env.CONFIG }}-Linux.tar.gz"
          generateReleaseNotes: true
          allowUpdates: true
