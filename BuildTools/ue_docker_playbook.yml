---
- name: Setup unreal docker host
  hosts: aws-streamers
  become: true
  gather_facts: true
  tasks:
    - name: Install base packages
      apt:
        pkg:
          - python3
          - python3-pip
          - unzip
          - build-essential
          - linux-headers-{{ansible_kernel}}
          - libvulkan1
        state: present
        update_cache: true
    - name: Install required python packages
      pip:
        name:
          - botocore
          - boto3
    - name: Fetch AWS CLI
      unarchive:
        src: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
        dest: /home/ubuntu
        remote_src: yes
      register: aws_cli_step
    - name: Install AWS CLI
      command: "{{ aws_cli_step.dest }}/aws/install"
      args:
        creates: /usr/local/bin/aws
      when: aws_cli_step.changed
      register: aws_cli_install_step
    - name: Update packages
      apt:
        upgrade: true
      when: aws_cli_install_step.changed
    - name: Reboot
      reboot:
      when: aws_cli_install_step.changed
    - name: Disable the nouveau open source driver for NVIDIA graphics cards.
      lineinfile:
        path: /etc/modprobe.d/blacklist.conf
        line: "{{ item }}"
      with_items:
        - "blacklist vga16fb"
        - "blacklist nouveau"
        - "blacklist rivafb"
        - "blacklist nvidiafb"
        - "blacklist rivatv"
    - name: Disable GPU firmware
      lineinfile:
        path: /etc/modprobe.d/nvidia.conf
        line: "options nvidia NVreg_EnableGpuFirmware=0"
        create: yes
    - name: Update grub setup.
      lineinfile:
        path: /etc/default/grub
        regexp: '^GRUB_CMDLINE_LINUX='
        line: 'GRUB_CMDLINE_LINUX="rdblacklist=nouveau"'
      register: grubupdate
    - name: Update Grub
      command: update-grub
      when: grubupdate.changed
    - name: List files from S3 bucket
      amazon.aws.s3_object:
        bucket: ec2-linux-nvidia-drivers
        prefix: latest/
        mode: list
      register: s3list
    - name: Copy files from S3 bucket
      amazon.aws.s3_object:
        bucket: ec2-linux-nvidia-drivers
        object: "{{ s3list.s3_keys[0] }}"
        dest: "/home/ubuntu/{{ s3list.s3_keys[0] | basename }}"
        mode: get
      register: s3get
    - name: Make installer executable
      file:
        path: "/home/ubuntu/{{ s3list.s3_keys[0] | basename }}"
        mode: +x
      when: s3get.changed
    - name: Run installer
      command: "/home/ubuntu/{{ s3list.s3_keys[0] | basename }} -q -s"
      when: s3get.changed
    - name: Reboot
      reboot:
      when: s3get.changed
    - name: Install NVIDIA keys
      shell: >
        distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
        && curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg
        && curl -s -L https://nvidia.github.io/libnvidia-container/$distribution/libnvidia-container.list |
            sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' |
            sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list
      args:
        creates: /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg
    - name: Install NVIDIA Container Toolkit and Docker
      apt:
        pkg:
          - nvidia-container-toolkit
        state: present
        update_cache: true
    - name: Install Docker
      shell: >
        curl https://get.docker.com | sh
        && sudo systemctl --now enable docker
      args:
        creates: /usr/bin/docker
      register: dockerinstall
    - name: Configure Docker
      command: |
        nvidia-ctk runtime configure --runtime=docker
      when: dockerinstall.changed
    - name: Restart Docker
      systemd:
        state: restarted
        name: docker
      when: dockerinstall.changed
